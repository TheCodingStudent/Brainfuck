from brainfuck import run

INSTRUCTIONS = {
    0: '+',
    1: '-',
    2: '<',
    3: '>',
    4: '[',
    5: ']',
    6: '.',
    7: '='
}

CODE = """
+++         ++++ + ++         +++ +++++ ++  ++++++ +++ +++           ++++ + ++           +++ +++++ ++     ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + + + + ++++++ +++ +++       
     ++++ + ++            +++ +++++ ++ + + + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++ + + + ++++++ +++ +++       ++++ + ++       +++ +++++ ++ + + + + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++  ++++++ +++ +++           ++++ + ++           +++ +++++ ++           ++++++ +++ +++           ++++ + ++        
   +++ +++++ ++    ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + + + + ++++++ +++ +++       ++++ + ++       +++ +++++ ++ + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++  ++++++ +++ +++           ++++ + ++           +++ +++++ ++         ++++++ +++ +++       ++++ + ++       +++ +++++ ++ + + + + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + 
+ + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++ ++++++ +++ +++           ++++ + ++           +++ +++++ ++  ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + ++++++ +++ +++       ++++ + ++       +++ +++++ ++ + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++ + + + ++++++ +++ +++   

     ++++ + ++           +++ +++++ ++ + ++++++ +++ +++           ++++ + ++           +++ +++++ ++     ++++++ +++ +++           ++++ + ++           +++ +++++ ++ + + + ++++++ +++ +++           ++++ + ++       
    +++ +++++ ++          ++++++ +++ +++           ++++ + ++           +++ +++++ ++ + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++ + ++++++ +++ +++            ++++ + ++            +++ +++++ 
++ + + + + + + + + + + ++++++ +++ +++       ++++ + ++       +++ +++++ ++ + + + + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++  ++++++ +++ +++           ++++ + ++           +++ +++++ ++           ++++++ +++ +++           ++++ + ++           +++ +++++ ++ ++++++ +++ +++           ++++ + ++           +++ +++++ ++  ++++++ +++ 

+ + + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++    ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++ 
+ + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++          ++++++ +++ +++           ++++ + ++           +++ +++++ ++ + + + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + 
+ ++++++ +++ +++        ++++ + ++        +++ +++++ ++ + + ++++++ +++ +++          ++++ + ++          +++ +++++ ++ + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ ++++++ +++ +++            ++++ 
+ ++            +++ +++++ ++ + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++     ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++           ++++++ +++ +++        ++++ + ++        +++ +++++ ++ + + ++++++ +++ +++          ++++ + ++          +++ +++++ ++ + ++++++ +++ +++            ++++ + ++            +++ 
+++++ ++ ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++     ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + 
+ + + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++           ++++++ +++ +++        ++++ + ++        +++ +++++ ++   ++++++ +++ +++        ++++ + ++        +++ +++++ ++ ++++++ +++ +++     
   ++++ + ++        +++ +++++ ++ + ++++++ +++ +++        ++++ + ++        +++ +++++ ++ + + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + + + ++++++ +++ +++            ++++ + ++   


++           +++ +++++ ++     ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++           ++++++ +++ +++        ++++ + 
++        +++ +++++ ++ + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++          ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + ++++++ +++ +++           ++++ + ++       
    +++ +++++ ++    ++++++ +++ +++        ++++ + ++        +++ +++++ ++  ++++++ +++ +++           ++++ + ++           +++ +++++ ++ + + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + 
+ ++++++ +++ +++           ++++ + ++           +++ +++++ ++ + + + ++++++ +++ +++           ++++ + ++           +++ +++++ ++      ++++++ +++ +++           ++++ + ++           +++ +++++ ++           ++++++ +++ +++        ++++ + ++        +++ +++++ ++ + + + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ + + + + + + + + + ++++++ +++ +++            ++++ + ++            +++ +++++ ++ ++++++ +++ 
"""

NEW_CODE = ''

for element in CODE.replace('\n', '').replace('\t', '').split(' '):
    NEW_CODE += INSTRUCTIONS.get(element.count('+'))

print(NEW_CODE)

if result := run(NEW_CODE)[0]:
    print(result)